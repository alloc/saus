// Vitest Snapshot v1

exports[`clientStatePlugin 1`] = `
{
  "ast": null,
  "code": "import { defineStateModule } from \\"saus/client\\";
import someClientLib from \\"some-client-lib\\";
import anotherClientLib from \\"another-client-lib\\";
import yetAnotherClientLib from \\"yet-another-client-lib\\";
export const foo = defineStateModule('foo');
export const bar = defineStateModule('bar', {
  hydrate(args, state) {
    state.bar = yetAnotherClientLib(state.bar);
  }

});

const onLoadFoo = (args, state, expiresAt) => {
  someClientLib(state);
};

foo.onLoad(onLoadFoo);
export { anotherClientLib };",
  "externalDependencies": Set {},
  "map": {
    "file": undefined,
    "mappings": "AAAA,SAASA,iBAAT,QAAkC,aAAlC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;AAGA,OAAO,MAAMC,GAAG,GAAGJ,iBAAiB,CAAC,KAAD,CAA7B;AAEP,OAAO,MAAMK,GAAG,GAAGL,iBAAiB,CAAC,KAAD,EAAQ;EAI1CM,OAAO,CAACC,IAAD,EAAOC,KAAP,EAAc;IACnBA,KAAK,CAACH,GAAN,GAAYF,mBAAmB,CAACK,KAAK,CAACH,GAAP,CAA/B;EACD;;AANyC,CAAR,CAA7B;;AASP,MAAMI,SAAS,GAAG,CAACF,IAAD,EAAOC,KAAP,EAAcE,SAAd,KAA4B;EAC5CT,aAAa,CAACO,KAAD,CAAb;AACD,CAFD;;AAIAJ,GAAG,CAACO,MAAJ,CAAWF,SAAX;AAEA,SAASP,gBAAT",
    "names": [
      "defineStateModule",
      "someClientLib",
      "anotherClientLib",
      "yetAnotherClientLib",
      "foo",
      "bar",
      "hydrate",
      "args",
      "state",
      "onLoadFoo",
      "expiresAt",
      "onLoad",
    ],
    "sourceRoot": undefined,
    "sources": [
      "state.ts",
    ],
    "sourcesContent": [
      "import { defineStateModule } from \\"saus/client\\"
import someClientLib from \\"some-client-lib\\"
import anotherClientLib from \\"another-client-lib\\"
import yetAnotherClientLib from \\"yet-another-client-lib\\"
import { fetch } from \\"node-fetch\\"

export const foo = defineStateModule('foo', () => fetch('/foo'))

export const bar = defineStateModule('bar', {
  serve() {
    return fetch('/bar')
  },
  hydrate(args, state) {
    state.bar = yetAnotherClientLib(state.bar)
  }
})

const onLoadFoo = (args, state, expiresAt) => {
  someClientLib(state)
}

foo.onLoad(onLoadFoo)

export { anotherClientLib }",
    ],
    "version": 3,
  },
  "metadata": {},
  "options": {
    "assumptions": {},
    "babelrc": false,
    "browserslistConfigFile": false,
    "cloneInputAst": true,
    "configFile": false,
    "cwd": "/Users/alec/dev/alloc/saus",
    "envName": "test",
    "generatorOpts": {
      "auxiliaryCommentAfter": undefined,
      "auxiliaryCommentBefore": undefined,
      "comments": true,
      "compact": "auto",
      "filename": undefined,
      "minified": undefined,
      "retainLines": undefined,
      "shouldPrintComment": undefined,
      "sourceFileName": "unknown",
      "sourceMaps": true,
      "sourceRoot": undefined,
    },
    "parserOpts": {
      "plugins": [],
      "sourceFileName": undefined,
      "sourceType": "module",
    },
    "passPerPreset": false,
    "plugins": [
      Plugin {
        "externalDependencies": [],
        "generatorOverride": undefined,
        "key": "base$0",
        "manipulateOptions": undefined,
        "options": {},
        "parserOverride": undefined,
        "post": undefined,
        "pre": undefined,
        "visitor": {
          "Program": {
            "enter": [
              [Function],
            ],
          },
          "_exploded": true,
          "_verified": true,
        },
      },
    ],
    "presets": [],
    "root": "/Users/alec/dev/alloc/saus",
    "rootMode": "root",
    "sourceMaps": true,
    "targets": {},
  },
  "sourceType": "module",
}
`;
